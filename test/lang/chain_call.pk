
## Chain call tests.

# concatenative programming 

def fn1(data)
	return '[fn1:' + data + ']'
end

def fn2(data, suffix)
	return '[fn2:' + data + '|' + suffix + ']'
end

def fn3(data)
	return '[fn3:' + data + ']'
end

result = 'data' -> fn1 -> fn2{'suff'} -> fn3
## `result -> print` same as `print(result)`
assert(result == '[fn3:[fn2:[fn1:data]|suff]]')

result = ' tEST+InG ' -> str_strip -> str_lower
assert(result == 'test+ing')




