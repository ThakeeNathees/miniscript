
// To implement.

- refactor build.bat batch script to powershell
  refactor makefile and setup a github action.
  
- check for tabs and trailing white space in source.
  they're not allowed.

- change or add => to_string() to value.as_string
  and add as_repr, as_bool.
  str_lower("UPPER") to "UPPER".lower

- support new line just after '=' (and other places)

- Implement argparse.
    - -v --version
    - emit opcodes
    - maybe write a similer .pyc file for pocket
    - --docs to generate docs from cstring.
    - dump compiled code to a file.
- In keyword.
- Structs (maybe enums).
- Implement file IO (require structs).
- Implement utf8 support.
- Implement gdb like debugger (add color print for readability).
- Initialize imported scripts (require fiber based vm).
- Hex, binary literals and floats like ".5".
- Complete all the TODO; macros.
- implement MAX_ARGC checks (would cause a buffer overflow if not)
  when compiling and calling a function (also in fibers).

// Low priority.
- Ignore line with '\' character.
- Make it possible to override function names.
      - To do so the functions and global variables should be in the same
        buffer as the property of the script.
- Function docstring property.
- Union tagging alter in var.
- Github actions.


// Add more.
- Single header for embedding (script in pk, require file IO).
- Complete core methods.
- Complete var methods.
- Complete core functions.
- Complete builtin operators.
- Complete opcodes.
- Complete core libs.
- Complete the docs.
- More Tests.

// Bugs.
It's at pre-alpha and every thing is left to
implement, and nothing would be work as expected.

- f = func print() end; print(f) # semicollon should be there.
  def f() print() end print(f)   # semicollon should be there.
  make it okey to use semicollon freely like new lines.
